// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectD;

#nullable disable

namespace ProjectD.Migrations
{
    [DbContext(typeof(FlightDBContext))]
    partial class FlightDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectD.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    // Alle kolommen blijven hetzelfde
                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalPax")
                        .HasColumnType("integer");

                    b.Property<int>("Seats")
                        .HasColumnType("integer");

                    // Enzovoorts... (alle andere kolommen die je al hebt)
                    
                    b.HasKey("Id");

                    // Hier pas ik de tabelnaam aan
                    b.ToTable("vluchten");  // Verwijst nu naar 'vluchten' in PostgreSQL
                });

            modelBuilder.Entity("ProjectD.Touchpoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FlightId")
                        .HasColumnType("integer");

                    b.HasKey("Id");
                    b.HasIndex("FlightId");

                    b.ToTable("Touchpoints");  // Touchpoints blijft hetzelfde
                });

            modelBuilder.Entity("ProjectD.Touchpoint", b =>
                {
                    b.HasOne("ProjectD.Flight", "Flight")
                        .WithMany("Touchpoints")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("ProjectD.Flight", b =>
                {
                    b.Navigation("Touchpoints");
                });
#pragma warning restore 612, 618
        }
    }
}